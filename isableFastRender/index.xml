<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Interweb World</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Interweb World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Writing About Alice Cooper</title>
      <link>http://localhost:1313/2018/07/writing-about-alice-cooper/</link>
      <pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2018/07/writing-about-alice-cooper/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
Alice Cooper Trash albumSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.</description>
    </item>
    
    <item>
      <title>The Damn Giants Causeway</title>
      <link>http://localhost:1313/2018/07/the-damn-giants-causeway/</link>
      <pubDate>Thu, 19 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2018/07/the-damn-giants-causeway/</guid>
      <description>Finn McCool FM The hot new thing in web development is actually pretty old: static websites. But these are static sites with a twist: using modern web development tools to build and deploy a complete website.
Whoops! Couldn&#39;t find image
I&amp;rsquo;ve been hearing a lot about Hugo these days - a superfast static site generator. Static has a lot of advantages: you don&amp;rsquo;t have to worry about resource-hungy server-side technologies such as PHP or MySQL.</description>
    </item>
    
    <item>
      <title>Building A Site With Hugo, Github and Netlify</title>
      <link>http://localhost:1313/2018/06/building-a-site-with-hugo-github-and-netlify/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2018/06/building-a-site-with-hugo-github-and-netlify/</guid>
      <description>Introduction The hot new thing in web development is actually pretty old: static websites. But these are static sites with a twist: using modern web development tools to build and deploy a complete website.
  My caption for this image
  I&amp;rsquo;ve been hearing a lot about Hugo these days - a superfast static site generator. Static has a lot of advantages: you don&amp;rsquo;t have to worry about resource-hungy server-side technologies such as PHP or MySQL.</description>
    </item>
    
    <item>
      <title>Building A Site With Hugo, Github and Netlify</title>
      <link>http://localhost:1313/2018/05/building-a-site-with-hugo-github-and-netlify/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2018/05/building-a-site-with-hugo-github-and-netlify/</guid>
      <description>Introduction The hot new thing in web development is actually pretty old: static websites. But these are static sites with a twist: using modern web development tools to build and deploy a complete website.
I&amp;rsquo;ve been hearing a lot about Hugo these days - a superfast static site generator. Static has a lot of advantages: you don&amp;rsquo;t have to worry about resource-hungy server-side technologies such as PHP or MySQL. You don&amp;rsquo;t have to worry about Content Management Systems, frequent patching and security updates.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>http://localhost:1313/2014/09/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/09/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Test Archetype</title>
      <link>http://localhost:1313/2018/07/test-archetype/</link>
      <pubDate>Wed, 11 Jul 2018 21:45:19 +0100</pubDate>
      
      <guid>http://localhost:1313/2018/07/test-archetype/</guid>
      <description>And so this pulled in the correct Archetype for the job! Awesome!
If I add content, does this get a date modified element as well? I&amp;rsquo;m still not sure why this is appearing down the content chain. Must be a good reason&amp;hellip;</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>http://localhost:1313/2014/04/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/04/hugo-template-primer/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>http://localhost:1313/2014/04/getting-started-with-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/04/getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>